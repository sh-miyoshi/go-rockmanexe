# Cline Rules

## プロジェクト概要

Go言語で書かれたwindowsで動作するクライアントアプリ
通常はCPUと戦う一人用ゲームとして実装されている
ただし、通信対戦モードも存在し、他のプレイヤーと対戦することも可能

## 通信対戦モードのアーキテクチャ

通信対戦では3つのアプリケーションがかかわってくる

1. クライアントアプリ
2. マッチングサーバー
3. ルーターサーバー

クライアントアプリはトップディレクトリにmain.goがあるメインのアプリで通信対戦するので2台必要になる
なお、開発時は1台をbotclientで代用する
マッチングサーバーはクライアントを認証し2台のクライアントのマッチングセッション情報を管理する
動的にセッションを管理するために本番ではmatcherを使うが、開発時はfakeserverで代用する
ルーターサーバーはクライアントアプリのデータを処理するサーバーである
クライアントの認証情報などをマッチングサーバーから受け取り、クライアントからの接続要求にこたえる
その後クライアントからの対戦データ(攻撃や移動など)を受け取り、適宜処理しつつ勝敗を決定する。

## ディレクトリ構成

- build
  - docker buildに関するファイルなどデプロイするときに使うもの
    - 基本的に編集することはない
- cmd
  - 各プログラムのエントリーポイント
  - 一番の基本はトップディレクトリにあるmain.goだが、それ以外のプログラムがある
  - 内訳
    - botclient: 通信対戦する際のダミー用の敵プログラム
    - fakeserver: routerがクライアントアプリの認証をするサーバー。ただし認証情報がconfig.yamlに書かれているだけなので簡易的なサーバー
    - mapeditor: マップエディター
    - matcher: マッチングサーバー。現在は使用していない
    - router: 通信対戦時にクライアントアプリのデータを処理しているサーバー。通信対戦時のメインロジックはすべてrouter側に書く
    - skill-simulator: スキルの動作をチェックするためのアプリ
- data
  - アプリで使用する画像や音声といったデータが入っている
- pkg
  - アプリで使用するパッケージが入っている
- test
  - End-to-Endテストが入っている
- tools
  - 人が開発するのに便利なツールが入っている
