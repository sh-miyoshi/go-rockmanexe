// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.0
// source: router.proto

package routerpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Action_ActionType int32

const (
	Action_UPDATEOBJECT Action_ActionType = 0
	Action_SENDSIGNAL   Action_ActionType = 1
)

// Enum value maps for Action_ActionType.
var (
	Action_ActionType_name = map[int32]string{
		0: "UPDATEOBJECT",
		1: "SENDSIGNAL",
	}
	Action_ActionType_value = map[string]int32{
		"UPDATEOBJECT": 0,
		"SENDSIGNAL":   1,
	}
)

func (x Action_ActionType) Enum() *Action_ActionType {
	p := new(Action_ActionType)
	*p = x
	return p
}

func (x Action_ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action_ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_router_proto_enumTypes[0].Descriptor()
}

func (Action_ActionType) Type() protoreflect.EnumType {
	return &file_router_proto_enumTypes[0]
}

func (x Action_ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action_ActionType.Descriptor instead.
func (Action_ActionType) EnumDescriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{0, 0}
}

type Action_SignalType int32

const (
	Action_CHIPSEND Action_SignalType = 0
)

// Enum value maps for Action_SignalType.
var (
	Action_SignalType_name = map[int32]string{
		0: "CHIPSEND",
	}
	Action_SignalType_value = map[string]int32{
		"CHIPSEND": 0,
	}
)

func (x Action_SignalType) Enum() *Action_SignalType {
	p := new(Action_SignalType)
	*p = x
	return p
}

func (x Action_SignalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action_SignalType) Descriptor() protoreflect.EnumDescriptor {
	return file_router_proto_enumTypes[1].Descriptor()
}

func (Action_SignalType) Type() protoreflect.EnumType {
	return &file_router_proto_enumTypes[1]
}

func (x Action_SignalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action_SignalType.Descriptor instead.
func (Action_SignalType) EnumDescriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{0, 1}
}

type Data_MsgType int32

const (
	Data_AUTHRESPONSE Data_MsgType = 0
	Data_UPDATESTATUS Data_MsgType = 1
	Data_DATA         Data_MsgType = 2
)

// Enum value maps for Data_MsgType.
var (
	Data_MsgType_name = map[int32]string{
		0: "AUTHRESPONSE",
		1: "UPDATESTATUS",
		2: "DATA",
	}
	Data_MsgType_value = map[string]int32{
		"AUTHRESPONSE": 0,
		"UPDATESTATUS": 1,
		"DATA":         2,
	}
)

func (x Data_MsgType) Enum() *Data_MsgType {
	p := new(Data_MsgType)
	*p = x
	return p
}

func (x Data_MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Data_MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_router_proto_enumTypes[2].Descriptor()
}

func (Data_MsgType) Type() protoreflect.EnumType {
	return &file_router_proto_enumTypes[2]
}

func (x Data_MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Data_MsgType.Descriptor instead.
func (Data_MsgType) EnumDescriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{3, 0}
}

type Data_Status int32

const (
	Data_CONNECTWAIT    Data_Status = 0
	Data_CHIPSELECTWAIT Data_Status = 1
	Data_ACTING         Data_Status = 2
	Data_GAMEEND        Data_Status = 3
)

// Enum value maps for Data_Status.
var (
	Data_Status_name = map[int32]string{
		0: "CONNECTWAIT",
		1: "CHIPSELECTWAIT",
		2: "ACTING",
		3: "GAMEEND",
	}
	Data_Status_value = map[string]int32{
		"CONNECTWAIT":    0,
		"CHIPSELECTWAIT": 1,
		"ACTING":         2,
		"GAMEEND":        3,
	}
)

func (x Data_Status) Enum() *Data_Status {
	p := new(Data_Status)
	*p = x
	return p
}

func (x Data_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Data_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_router_proto_enumTypes[3].Descriptor()
}

func (Data_Status) Type() protoreflect.EnumType {
	return &file_router_proto_enumTypes[3]
}

func (x Data_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Data_Status.Descriptor instead.
func (Data_Status) EnumDescriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{3, 1}
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string            `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	ClientID  string            `protobuf:"bytes,2,opt,name=clientID,proto3" json:"clientID,omitempty"`
	Type      Action_ActionType `protobuf:"varint,3,opt,name=type,proto3,enum=router.Action_ActionType" json:"type,omitempty"`
	// Types that are assignable to Data:
	//	*Action_Signal
	//	*Action_ObjectInfo
	Data isAction_Data `protobuf_oneof:"data"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{0}
}

func (x *Action) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *Action) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *Action) GetType() Action_ActionType {
	if x != nil {
		return x.Type
	}
	return Action_UPDATEOBJECT
}

func (m *Action) GetData() isAction_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Action) GetSignal() Action_SignalType {
	if x, ok := x.GetData().(*Action_Signal); ok {
		return x.Signal
	}
	return Action_CHIPSEND
}

func (x *Action) GetObjectInfo() []byte {
	if x, ok := x.GetData().(*Action_ObjectInfo); ok {
		return x.ObjectInfo
	}
	return nil
}

type isAction_Data interface {
	isAction_Data()
}

type Action_Signal struct {
	Signal Action_SignalType `protobuf:"varint,4,opt,name=signal,proto3,enum=router.Action_SignalType,oneof"`
}

type Action_ObjectInfo struct {
	ObjectInfo []byte `protobuf:"bytes,5,opt,name=objectInfo,proto3,oneof"`
}

func (*Action_Signal) isAction_Data() {}

func (*Action_ObjectInfo) isAction_Data() {}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{1}
}

func (x *Result) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Result) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{2}
}

func (x *AuthRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuthRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AuthRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Data_MsgType `protobuf:"varint,1,opt,name=type,proto3,enum=router.Data_MsgType" json:"type,omitempty"`
	// Types that are assignable to Data:
	//	*Data_AuthRes
	//	*Data_Status_
	//	*Data_RawData
	Data isData_Data `protobuf_oneof:"data"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{3}
}

func (x *Data) GetType() Data_MsgType {
	if x != nil {
		return x.Type
	}
	return Data_AUTHRESPONSE
}

func (m *Data) GetData() isData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Data) GetAuthRes() *AuthResponse {
	if x, ok := x.GetData().(*Data_AuthRes); ok {
		return x.AuthRes
	}
	return nil
}

func (x *Data) GetStatus() Data_Status {
	if x, ok := x.GetData().(*Data_Status_); ok {
		return x.Status
	}
	return Data_CONNECTWAIT
}

func (x *Data) GetRawData() []byte {
	if x, ok := x.GetData().(*Data_RawData); ok {
		return x.RawData
	}
	return nil
}

type isData_Data interface {
	isData_Data()
}

type Data_AuthRes struct {
	AuthRes *AuthResponse `protobuf:"bytes,2,opt,name=authRes,proto3,oneof"`
}

type Data_Status_ struct {
	Status Data_Status `protobuf:"varint,3,opt,name=status,proto3,enum=router.Data_Status,oneof"`
}

type Data_RawData struct {
	RawData []byte `protobuf:"bytes,4,opt,name=rawData,proto3,oneof"`
}

func (*Data_AuthRes) isData_Data() {}

func (*Data_Status_) isData_Data() {}

func (*Data_RawData) isData_Data() {}

type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrMsg    string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	SessionID string `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_router_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_router_proto_rawDescGZIP(), []int{4}
}

func (x *AuthResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

func (x *AuthResponse) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

var File_router_proto protoreflect.FileDescriptor

var file_router_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x22, 0x9c, 0x02, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12,
	0x20, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x2e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x0c, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x45, 0x4e, 0x44, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x10,
	0x01, 0x22, 0x1a, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x48, 0x49, 0x50, 0x53, 0x45, 0x4e, 0x44, 0x10, 0x00, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0x49, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x02, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x30, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x22, 0x37, 0x0a, 0x07,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x55, 0x54, 0x48, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x41, 0x54, 0x41, 0x10, 0x02, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x57, 0x41, 0x49, 0x54, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x43, 0x48, 0x49, 0x50, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x57, 0x41,
	0x49, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x47, 0x41, 0x4d, 0x45, 0x45, 0x4e, 0x44, 0x10, 0x03, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x32, 0x6e, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0e, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x13,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x00, 0x30, 0x01, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x2d, 0x6d, 0x69, 0x79, 0x6f, 0x73, 0x68, 0x69, 0x2f, 0x67,
	0x6f, 0x2d, 0x72, 0x6f, 0x63, 0x6b, 0x6d, 0x61, 0x6e, 0x65, 0x78, 0x65, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_router_proto_rawDescOnce sync.Once
	file_router_proto_rawDescData = file_router_proto_rawDesc
)

func file_router_proto_rawDescGZIP() []byte {
	file_router_proto_rawDescOnce.Do(func() {
		file_router_proto_rawDescData = protoimpl.X.CompressGZIP(file_router_proto_rawDescData)
	})
	return file_router_proto_rawDescData
}

var file_router_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_router_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_router_proto_goTypes = []interface{}{
	(Action_ActionType)(0), // 0: router.Action.ActionType
	(Action_SignalType)(0), // 1: router.Action.SignalType
	(Data_MsgType)(0),      // 2: router.Data.MsgType
	(Data_Status)(0),       // 3: router.Data.Status
	(*Action)(nil),         // 4: router.Action
	(*Result)(nil),         // 5: router.Result
	(*AuthRequest)(nil),    // 6: router.AuthRequest
	(*Data)(nil),           // 7: router.Data
	(*AuthResponse)(nil),   // 8: router.AuthResponse
}
var file_router_proto_depIdxs = []int32{
	0, // 0: router.Action.type:type_name -> router.Action.ActionType
	1, // 1: router.Action.signal:type_name -> router.Action.SignalType
	2, // 2: router.Data.type:type_name -> router.Data.MsgType
	8, // 3: router.Data.authRes:type_name -> router.AuthResponse
	3, // 4: router.Data.status:type_name -> router.Data.Status
	4, // 5: router.Router.SendAction:input_type -> router.Action
	6, // 6: router.Router.PublishData:input_type -> router.AuthRequest
	5, // 7: router.Router.SendAction:output_type -> router.Result
	7, // 8: router.Router.PublishData:output_type -> router.Data
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_router_proto_init() }
func file_router_proto_init() {
	if File_router_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_router_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_router_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Action_Signal)(nil),
		(*Action_ObjectInfo)(nil),
	}
	file_router_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Data_AuthRes)(nil),
		(*Data_Status_)(nil),
		(*Data_RawData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_router_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_router_proto_goTypes,
		DependencyIndexes: file_router_proto_depIdxs,
		EnumInfos:         file_router_proto_enumTypes,
		MessageInfos:      file_router_proto_msgTypes,
	}.Build()
	File_router_proto = out.File
	file_router_proto_rawDesc = nil
	file_router_proto_goTypes = nil
	file_router_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RouterClient is the client API for Router service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouterClient interface {
	SendAction(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Result, error)
	PublishData(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (Router_PublishDataClient, error)
}

type routerClient struct {
	cc grpc.ClientConnInterface
}

func NewRouterClient(cc grpc.ClientConnInterface) RouterClient {
	return &routerClient{cc}
}

func (c *routerClient) SendAction(ctx context.Context, in *Action, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/router.Router/SendAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routerClient) PublishData(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (Router_PublishDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Router_serviceDesc.Streams[0], "/router.Router/PublishData", opts...)
	if err != nil {
		return nil, err
	}
	x := &routerPublishDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Router_PublishDataClient interface {
	Recv() (*Data, error)
	grpc.ClientStream
}

type routerPublishDataClient struct {
	grpc.ClientStream
}

func (x *routerPublishDataClient) Recv() (*Data, error) {
	m := new(Data)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RouterServer is the server API for Router service.
type RouterServer interface {
	SendAction(context.Context, *Action) (*Result, error)
	PublishData(*AuthRequest, Router_PublishDataServer) error
}

// UnimplementedRouterServer can be embedded to have forward compatible implementations.
type UnimplementedRouterServer struct {
}

func (*UnimplementedRouterServer) SendAction(context.Context, *Action) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendAction not implemented")
}
func (*UnimplementedRouterServer) PublishData(*AuthRequest, Router_PublishDataServer) error {
	return status.Errorf(codes.Unimplemented, "method PublishData not implemented")
}

func RegisterRouterServer(s *grpc.Server, srv RouterServer) {
	s.RegisterService(&_Router_serviceDesc, srv)
}

func _Router_SendAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Action)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouterServer).SendAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/router.Router/SendAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouterServer).SendAction(ctx, req.(*Action))
	}
	return interceptor(ctx, in, info, handler)
}

func _Router_PublishData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AuthRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RouterServer).PublishData(m, &routerPublishDataServer{stream})
}

type Router_PublishDataServer interface {
	Send(*Data) error
	grpc.ServerStream
}

type routerPublishDataServer struct {
	grpc.ServerStream
}

func (x *routerPublishDataServer) Send(m *Data) error {
	return x.ServerStream.SendMsg(m)
}

var _Router_serviceDesc = grpc.ServiceDesc{
	ServiceName: "router.Router",
	HandlerType: (*RouterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendAction",
			Handler:    _Router_SendAction_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PublishData",
			Handler:       _Router_PublishData_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "router.proto",
}
