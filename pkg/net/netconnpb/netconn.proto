syntax = "proto3";

package netconn;
option go_package = "github.com/sh-miyoshi/go-rockmanexe/pkg/net/netconnpb";

service NetConn {
    rpc TransData(stream Action) returns (stream Data) {}
}

message Action {
    message AuthRequest {
        string id = 1;
        string key = 2;
        string version = 3;
    }

    enum ActionType {
        AUTHENTICATE = 0;
        UPDATEOBJECT = 1;
        REMOVEOBJECT = 2;
        ADDDAMAGE = 4;
        ADDEFFECT = 5;
        SENDSIGNAL = 6;
        ADDSOUND = 7;
    }

    enum SignalType {
        CHIPSEND = 0;
        GOCHIPSELECT = 1;
        PLAYERDEAD = 2;
    }

    string sessionID = 1;
    string clientID = 2;
    ActionType type = 3;

    oneof data {
        AuthRequest req = 4;
        bytes objectInfo = 5;
        bytes damageInfo = 7;
        bytes effect = 8;
        SignalType signal = 9;
        bytes sound = 10;
    }
}

message Data {
    message AuthResponse {
        bool success = 1;
        string errMsg = 2;
        string sessionID = 3;
        repeated string allUserIDs = 4;
    }

    enum MsgType {
        AUTHRESPONSE = 0;
        UPDATESTATUS = 1;
        DATA = 2;
    }

    enum Status {
        CONNECTWAIT = 0;
        CHIPSELECTWAIT = 1;
        ACTING = 2;
        GAMEEND = 3;
    }

    MsgType type = 1;
    oneof data {
        AuthResponse authRes = 2;
        Status status = 3;
        bytes rawData = 4;
    }
}
